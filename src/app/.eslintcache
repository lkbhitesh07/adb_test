[{"/src/app/src/App.js":"1","/src/app/src/index.js":"2","/src/app/src/reportWebVitals.js":"3"},{"size":2207,"mtime":1697791369223,"results":"4","hashOfConfig":"5"},{"size":500,"mtime":1696501468218,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1696501468218,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"nfsftz",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/src/app/src/App.js",["15"],"/src/app/src/index.js",[],["16","17"],"/src/app/src/reportWebVitals.js",[],{"ruleId":"18","severity":1,"message":"19","line":13,"column":13,"nodeType":"20","endLine":22,"endColumn":4},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-native-reassign",["25"],"no-negated-in-lhs",["26"],"no-global-assign","no-unsafe-negation"]